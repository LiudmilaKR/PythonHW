'''
Проверяйте различный случайные варианты и выведите 4 успешных расстановки.
'''

from chess import qeens_task, gen_pairs


for i in range(10_000_000):
    q = gen_pairs(8)
    res = qeens_task(q)
    if not res[0]:
        print(q)
        
        
# Успешные варианты для 7 ферзей:
# {(1, 2), (6, 4), (5, 1), (7, 6), (4, 7), (3, 5), (2, 8)}
# {(3, 8), (4, 3), (5, 1), (1, 4), (2, 6), (7, 2), (8, 5)}
# {(5, 5), (2, 1), (3, 4), (7, 2), (8, 6), (1, 3), (4, 7)}
# {(8, 4), (2, 1), (6, 7), (3, 3), (7, 2), (4, 8), (1, 6)}
# {(8, 4), (3, 7), (6, 8), (4, 5), (2, 2), (5, 3), (1, 6)}

# Для 8 ферзей случайными вариантами дажа с 10 млн не выдал ни одного успешного
# Задачу необходимо решать другим путем (не случайным подбором).

# flag = True
# while flag:
#     q = hw_task63.gen_pairs(7)
#     res = hw_task62.qeens_task(q)
#     flag = res[0]
# print(q)

# for i in range(1, 8):
#     for j in range(1, 8):
#         q.add((i, j))
#         if len(q) == 8 and hw_task62.qeens_task(q)[0] == False:
#             print(q)
#             break
